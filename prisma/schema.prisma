generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  compoundId           String    @unique @map(name: "compound_id")
  providerType         String    @map(name: "provider_type")
  providerId           String    @map(name: "provider_id")
  providerAccountId    String    @map(name: "provider_account_id")
  refreshToken         String?   @map(name: "refresh_token")
  accessToken          String?   @map(name: "access_token")
  accessTokenExpires   DateTime? @map(name: "access_token_expires")
  createdAt            DateTime  @default(now()) @map(name: "created_at")
  updatedAt            DateTime  @default(now()) @map(name: "updated_at")
  id                   Int       @id @default(autoincrement())
  userId               Int
  User                 User      @relation(fields: [userId], references: [id])

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "fk_User_id")

  @@map(name: "accounts")
}

model Apartment {
  price              Int
  locked             Boolean
  location           String
  id                 Int                  @id @default(autoincrement())
  ApartmentInventory ApartmentInventory[]
  CharacterApartment CharacterApartment?

  @@map(name: "apartments")
}

model ApartmentInventory {
  id              Int       @id @default(autoincrement())
  fk_Inventory_id Int
  fk_Apartment_id Int
  Apartment       Apartment @relation(fields: [fk_Apartment_id], references: [id])
  Inventory       Inventory @relation(fields: [fk_Inventory_id], references: [id])

  @@index([fk_Apartment_id], name: "fk_Apartment_id")
  @@index([fk_Inventory_id], name: "fk_Inventory_id")
}

model Business {
  price             Int
  locked            Boolean
  location          String
  id                Int                 @id @default(autoincrement())
  BusinessInventory BusinessInventory[]
  CharacterBusiness CharacterBusiness?
}

model BusinessInventory {
  id              Int       @id @default(autoincrement())
  fk_Inventory_id Int
  fk_Business_id  Int
  Business        Business  @relation(fields: [fk_Business_id], references: [id])
  Inventory       Inventory @relation(fields: [fk_Inventory_id], references: [id])

  @@index([fk_Business_id], name: "fk_Business_id")
  @@index([fk_Inventory_id], name: "fk_Inventory_id")
}

model Character {
  first_name                                  String
  last_name                                   String
  cash                                        Int
  bank                                        Int
  dead                                        Boolean
  phone_number                                String
  health                                      Int
  armor                                       Int
  arrest_time                                 Int
  dimension                                   Int
  last_position                               String
  id                                          Int                  @id @default(autoincrement())
  fk_User_id                                  Int
  User                                        User                 @relation(fields: [fk_User_id], references: [id])
  CharacterApartment                          CharacterApartment[]
  CharacterBusiness                           CharacterBusiness[]
  CharacterHouse                              CharacterHouse[]
  CharacterInventory                          CharacterInventory?
  CharacterSkill                              CharacterSkill[]
  CharacterVehicle                            CharacterVehicle[]
  Contact_CharacterToContact_fk_Character_id  Contact[]            @relation("CharacterToContact_fk_Character_id")
  Contact_CharacterToContact_fk_Character_id1 Contact[]            @relation("CharacterToContact_fk_Character_id1")
  Faction                                     Faction?
  FactionMember                               FactionMember?
  Message_CharacterToMessage_fk_Character_id  Message[]            @relation("CharacterToMessage_fk_Character_id")
  Message_CharacterToMessage_fk_Character_id1 Message[]            @relation("CharacterToMessage_fk_Character_id1")

  @@index([fk_User_id], name: "fk_User_id")
}

model CharacterApartment {
  id              Int       @id @default(autoincrement())
  fk_Character_id Int
  fk_Apartment_id Int       @unique
  Apartment       Apartment @relation(fields: [fk_Apartment_id], references: [id])
  Character       Character @relation(fields: [fk_Character_id], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
}

model CharacterBusiness {
  id              Int       @id @default(autoincrement())
  fk_Character_id Int
  fk_Business_id  Int       @unique
  Business        Business  @relation(fields: [fk_Business_id], references: [id])
  Character       Character @relation(fields: [fk_Character_id], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
}

model CharacterHouse {
  id              Int       @id @default(autoincrement())
  fk_Character_id Int
  fk_House_id     Int       @unique
  Character       Character @relation(fields: [fk_Character_id], references: [id])
  House           House     @relation(fields: [fk_House_id], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
}

model CharacterInventory {
  id              Int       @id @default(autoincrement())
  fk_Inventory_id Int
  fk_Character_id Int       @unique
  Character       Character @relation(fields: [fk_Character_id], references: [id])
  Inventory       Inventory @relation(fields: [fk_Inventory_id], references: [id])

  @@index([fk_Inventory_id], name: "fk_Inventory_id")
}

model CharacterSkill {
  level           Int
  xp              Int
  id              Int       @id @default(autoincrement())
  fk_Skill_id     Int
  fk_Character_id Int
  Character       Character @relation(fields: [fk_Character_id], references: [id])
  Skill           Skill     @relation(fields: [fk_Skill_id], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
  @@index([fk_Skill_id], name: "fk_Skill_id")
}

model CharacterVehicle {
  destroyed         Boolean
  last_position     String
  last_rotation     String
  fuel              Int
  dimension         Int
  locked            Boolean
  number_plate      String
  id                Int                @id @default(autoincrement())
  fk_Vehicle_id     Int
  fk_Character_id   Int
  Character         Character          @relation(fields: [fk_Character_id], references: [id])
  Vehicle           Vehicle            @relation(fields: [fk_Vehicle_id], references: [id])
  VechileInventory  VechileInventory?
  VehicleProperties VehicleProperties?

  @@index([fk_Character_id], name: "fk_Character_id")
  @@index([fk_Vehicle_id], name: "fk_Vehicle_id")
}

model Contact {
  id                                            Int       @id @default(autoincrement())
  fk_Character_id                               Int
  fk_Character_id1                              Int
  Character_CharacterToContact_fk_Character_id  Character @relation("CharacterToContact_fk_Character_id", fields: [fk_Character_id], references: [id])
  Character_CharacterToContact_fk_Character_id1 Character @relation("CharacterToContact_fk_Character_id1", fields: [fk_Character_id1], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
  @@index([fk_Character_id1], name: "fk_Character_id1")
}

model Faction {
  name            String
  created_at      DateTime        @default(now())
  id              Int             @id @default(autoincrement())
  fk_Character_id Int             @unique
  Character       Character       @relation(fields: [fk_Character_id], references: [id])
  FactionMember   FactionMember[]
}

model FactionMember {
  joined_at       DateTime  @default(now())
  id              Int       @id @default(autoincrement())
  fk_Character_id Int       @unique
  fk_Faction_id   Int
  Character       Character @relation(fields: [fk_Character_id], references: [id])
  Faction         Faction   @relation(fields: [fk_Faction_id], references: [id])

  @@index([fk_Faction_id], name: "fk_Faction_id")
}

model House {
  price          Int
  locked         Boolean
  location       String
  id             Int              @id @default(autoincrement())
  CharacterHouse CharacterHouse?
  HouseInventory HouseInventory[]
}

model HouseInventory {
  id              Int       @id @default(autoincrement())
  fk_House_id     Int
  fk_Inventory_id Int
  House           House     @relation(fields: [fk_House_id], references: [id])
  Inventory       Inventory @relation(fields: [fk_Inventory_id], references: [id])

  @@index([fk_House_id], name: "fk_House_id")
  @@index([fk_Inventory_id], name: "fk_Inventory_id")
}

model Inventory {
  id                 Int                  @id @default(autoincrement())
  ApartmentInventory ApartmentInventory[]
  BusinessInventory  BusinessInventory[]
  CharacterInventory CharacterInventory[]
  HouseInventory     HouseInventory[]
  InventoryItem      InventoryItem[]
  VechileInventory   VechileInventory[]
}

model InventoryItem {
  slot            Int
  amount          Int
  id              Int       @id @default(autoincrement())
  fk_Inventory_id Int
  fk_Item_id      Int
  Inventory       Inventory @relation(fields: [fk_Inventory_id], references: [id])
  Item            Item      @relation(fields: [fk_Item_id], references: [id])

  @@index([fk_Inventory_id], name: "fk_Inventory_id")
  @@index([fk_Item_id], name: "fk_Item_id")
}

model Item {
  name          String
  hash          String
  weight        Float
  id            Int             @id @default(autoincrement())
  InventoryItem InventoryItem[]
}

model LoginHistory {
  date         DateTime @default(now())
  ip           String
  social_id    String
  hwid_ex_hash String
  hwid_hash    String
  id           Int      @id @default(autoincrement())
  fk_User_id   Int
  User         User     @relation(fields: [fk_User_id], references: [id])

  @@index([fk_User_id], name: "test")
}

model Message {
  content                                       String
  sent_at                                       DateTime  @default(now())
  id                                            Int       @id @default(autoincrement())
  fk_Character_id                               Int
  fk_Character_id1                              Int
  Character_CharacterToMessage_fk_Character_id  Character @relation("CharacterToMessage_fk_Character_id", fields: [fk_Character_id], references: [id])
  Character_CharacterToMessage_fk_Character_id1 Character @relation("CharacterToMessage_fk_Character_id1", fields: [fk_Character_id1], references: [id])

  @@index([fk_Character_id], name: "fk_Character_id")
  @@index([fk_Character_id1], name: "fk_Character_id1")
}

model RegistrationVerificationRequest {
  identifier String
  token      String
  expires    DateTime
  created_at DateTime
  updated_at DateTime
  id         Int      @id @default(autoincrement())
}

model ResetPasswordVerificationRequest {
  identifier String
  token      String
  expires    DateTime
  created_at DateTime
  updated_at DateTime
  id         Int      @id @default(autoincrement())
}

model Session {
  expires       DateTime?
  session_token String?
  access_token  String?
  created_at    DateTime?
  updated_at    DateTime?
  id            Int       @id
  user_id       Int
  User          User      @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "fk_User_id")
}

model Skill {
  name           String
  hash           String
  max_level      Int
  id             Int              @id @default(autoincrement())
  CharacterSkill CharacterSkill[]
}

model User {
  username       String
  name           String
  email          String
  password       String
  email_verified DateTime
  verified       Boolean
  image          String
  created_at     DateTime       @default(now())
  updated_at     DateTime       @default(now())
  role           String
  id             Int            @id @default(autoincrement())
  Account        Account[]
  Character      Character[]
  LoginHistory   LoginHistory[]
  Session        Session[]
}

model VechileInventory {
  id                     Int              @id @default(autoincrement())
  fk_CharacterVehicle_id Int              @unique
  fk_Inventory_id        Int
  CharacterVehicle       CharacterVehicle @relation(fields: [fk_CharacterVehicle_id], references: [id])
  Inventory              Inventory        @relation(fields: [fk_Inventory_id], references: [id])

  @@index([fk_Inventory_id], name: "fk_Inventory_id")
}

model Vehicle {
  name             String
  hash             String
  price            Int
  manufacturer     String
  seats            Int
  class            String
  type             String
  max_braking      Float
  max_braking_mods Float
  max_speed        Float
  max_traction     Float
  acceleration     Float
  agility          Float
  max_knots        Float
  move_resistance  Float
  id               Int                @id @default(autoincrement())
  CharacterVehicle CharacterVehicle[]
}

model VehicleProperties {
  id                     Int              @id @default(autoincrement())
  fk_CharacterVehicle_id Int              @unique
  CharacterVehicle       CharacterVehicle @relation(fields: [fk_CharacterVehicle_id], references: [id])
}

model VerificationRequest {
  identifier String?
  token      String?
  expires    DateTime?
  created_at DateTime?
  updated_at DateTime?
  id         Int       @id
}
